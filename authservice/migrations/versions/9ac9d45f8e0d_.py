"""empty message

Revision ID: 9ac9d45f8e0d
Revises: c9ae720d5a53
Create Date: 2022-11-15 23:49:35.883831

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ac9d45f8e0d'
down_revision = 'c9ae720d5a53'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата создания'),
                    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('logged_in_at', sa.DateTime(), nullable=False),
                    sa.Column('user_agent', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at'),
                    sa.UniqueConstraint('user_id', 'logged_in_at'),
                    postgresql_partition_by='RANGE (logged_in_at)'
                    )
    op.create_index(op.f('ix_login_history_user_id'), 'login_history', ['user_id'], unique=False)
    op.execute("CREATE SCHEMA IF NOT EXISTS partman;")
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_partman SCHEMA partman;")
    op.execute("create extension if not exists pg_cron;")
    op.execute("SELECT partman.create_parent('public.login_history', 'logged_in_at', 'native', 'monthly');")
    op.execute("UPDATE partman.part_config SET infinite_time_partitions = true;")
    op.execute("select cron.schedule('@monthly', "
               "$$SELECT partman.create_parent('public.login_history', 'logged_in_at', 'native', 'monthly')$$);")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_login_history_user_id'), table_name='login_history')
    op.drop_table('login_history')
    # ### end Alembic commands ###
