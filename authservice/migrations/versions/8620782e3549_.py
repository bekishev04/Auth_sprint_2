"""empty message

Revision ID: 8620782e3549
Revises: 9ac9d45f8e0d
Create Date: 2022-11-18 20:48:28.571113

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8620782e3549'
down_revision = '9ac9d45f8e0d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_accounts',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата создания'),
                    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('service_user_id', sa.Text(), nullable=True),
                    sa.Column('service_name', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_oauth_accounts_user_id'), 'oauth_accounts', ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history_p2023_03',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2023_03_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2023_03_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2023_03_user_id_idx', 'login_history_p2023_03', ['user_id'], unique=False)
    op.create_table('login_history_p2023_01',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2023_01_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2023_01_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2023_01_user_id_idx', 'login_history_p2023_01', ['user_id'], unique=False)
    op.create_table('login_history_p2022_12',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_12_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_12_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_12_user_id_idx', 'login_history_p2022_12', ['user_id'], unique=False)
    op.create_table('login_history_default',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_default_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_default_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_default_user_id_idx', 'login_history_default', ['user_id'], unique=False)
    op.create_table('login_history_p2022_09',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_09_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_09_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_09_user_id_idx', 'login_history_p2022_09', ['user_id'], unique=False)
    op.create_table('login_history_p2022_08',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_08_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_08_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_08_user_id_idx', 'login_history_p2022_08', ['user_id'], unique=False)
    op.create_table('login_history_p2022_07',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_07_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_07_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_07_user_id_idx', 'login_history_p2022_07', ['user_id'], unique=False)
    op.create_table('login_history_p2022_10',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_10_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_10_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_10_user_id_idx', 'login_history_p2022_10', ['user_id'], unique=False)
    op.create_table('login_history_p2022_11',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2022_11_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2022_11_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2022_11_user_id_idx', 'login_history_p2022_11', ['user_id'], unique=False)
    op.create_table('login_history_p2023_02',
                    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False, comment='Идентификатор'),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата создания'),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False,
                              comment='Дата обновления'),
                    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('logged_in_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_history_user_id_fkey',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'logged_in_at', name='login_history_p2023_02_pkey'),
                    sa.UniqueConstraint('user_id', 'logged_in_at',
                                        name='login_history_p2023_02_user_id_logged_in_at_key')
                    )
    op.create_index('login_history_p2023_02_user_id_idx', 'login_history_p2023_02', ['user_id'], unique=False)
    op.drop_index(op.f('ix_oauth_accounts_user_id'), table_name='oauth_accounts')
    op.drop_table('oauth_accounts')
    # ### end Alembic commands ###
